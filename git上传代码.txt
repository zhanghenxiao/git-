这不一般就一个trunk然后根据项目需求程度来弄branches吗
小改小闹啥的在主干上弄下就行，模块大改新模块添加啥的就拉一条分支出来写就行

我们就两个
一个dev一个master

开发，测试，预灰度，灰度，预上线，就这些环境分支吧

首先在github 上创建好远程仓库，并拷贝仓库地址，接下来按照以下步骤：
 
1、打开命令行进入要上传的文件目录，初始化 git init 
2、 建立远程仓库，git remote add origin  "地址"
3、 添加文件，git add .
  （git add --all 也可以）
4、查看状态 git status
5、 添加更新注释内容，git commit -m "注释"
6、 进行代码合并， git pull --rebase origin dev
7、第一次更新内容会要求输入用户名或者邮箱进行身份验证， git config --global user.name "你的名字或昵称"
　 　　　　　　　　　　　　　　　　　　　　　　　　　　  git config --global usre.name "你的邮箱"
8、 上传代码到github远程仓库 git push -u origin dev


git stash和git add区别  https://www.dazhuanlan.com/2020/03/02/5e5c3ae65f4b5/

git 切换分支

git branch -a #列出所有的分支(远程和本地)
git checkout -b 本地分支名 origin/远程分支名


git 本地修改未提交时切换分支

1.缓存本地变更
git stash
2.切换分支
git checkout dev_B
3.提取本地变更
git stash apply


git 本地修改未提交时需要拉取新代码

1.缓存本地变更
git stash
2.切换分支
git pull --rebase origin dev
3.提取本地变更
git stash apply




1.从git上下载(克隆)项目
在安装好git的前提下使用代码 > git clone $网址$
网址为：(示例)https://github.com/1729051657/videoCode.git  通常都是.git结尾
完整示例命令： git clone https://github.com/1729051657/videoCode.git


新建git仓库
使用当前目录作为Git仓库，我们只需使它初始化。

git init
该命令执行完后会在当前目录生成一个 .git 目录。

使用我们指定目录作为Git仓库。

git init newrepo
初始化后，会在 newrepo 目录下会出现一个名为 .git 的目录，所有 Git 需要的数据和资源都存放在这个目录中。

如果当前目录下有几个文件想要纳入版本控制，需要先用 git add 命令告诉 Git 开始对这些文件进行跟踪，然后提交：

$ git add *.c
$ git add README
$ git commit -m '初始化项目版本'


删除仓库，就是需要删除仓库文件夹下隐藏的 .git 文件夹！！！

进入项目所在目录，打开git bash，开始删除本地仓库：

显示所有本地分支（初始化时只有一个master分支）
$ git branch
1

初始化本地版本库（重新初始化一次，可以忽略）
$ git init

找到目录下隐藏的 .git
$ ls -a

删除 .git
$ rm -rf .git

可以看到master分支已经删除
$ ls -a



npm淘宝镜像版
npm install --registry=https://registry.npm.taobao.org

cmd强制删除文件
del /?
del /F /S /Q  

找到要删除文件夹的位置，使用命令行 rmdir /s/q 文件夹位置